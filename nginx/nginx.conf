
map  $ssl_client_s_dn  $ssl_client_s_dn_cn {
	default "";
	~(^|,)CN=(?<CN>[^,]+) $CN;
}

limit_req_zone $binary_remote_addr zone=variant_request_limit:10m rate=5r/s;

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;  
}

server {

    listen 443 ssl;

    ssl_certificate              /server-certificates/${SERVER_CERT_FILENAME};
    ssl_certificate_key          /server-certificates/${SERVER_KEY_FILENAME};
       
    location / {
        auth_basic              "basic-authetication";
        auth_basic_user_file    /data/.htpasswd;
        proxy_pass              http://web-server;
    }

    location /favicon.ico {
        access_log off;
        return 204;
    }

}

server {

    set $client_verifiaction ${CLIENT_VERIFICATION};

    limit_req zone=variant_request_limit burst=10 nodelay;

    listen 5000 ssl;

    ssl_certificate             /server-certificates/${SERVER_CERT_FILENAME};
    ssl_certificate_key         /server-certificates/${SERVER_KEY_FILENAME};
    ssl_client_certificate      /network-configuration/${CLIENT_CA_CERT_FILENAME};

    ssl_verify_client           optional;
    ssl_prefer_server_ciphers   on;
    ssl_protocols               TLSv1.1 TLSv1.2;
    ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';
    
    keepalive_timeout           10;
    ssl_session_timeout         5m;

    location / {
        error_page 417 = @local_request;
        error_page 418 = @var-node_verification;
        error_page 419 = @waf_verification;
        if ( $remote_addr = 172.18.0.2 ) { return 417; }
        if ( $client_verifiaction = "var-node" ) { return 418; }
        if ( $client_verifiaction = "waf" ) { return 419; }
    }

    location @local_request {
        proxy_pass              http://variant-server;
        proxy_set_header       Requesting-Node "this variant node";
    }

    location @var-node_verification {
        if ( $ssl_client_verify != SUCCESS ) {
            return 403;
        }
        if ( $ssl_client_s_dn_cn != $remote_addr ) {
			return 403;
		}
        proxy_pass              http://variant-server;
        proxy_set_header       Requesting-Node $ssl_client_s_dn_cn;
    }

    location @waf_verification {
        deny                    all;
        allow                   ${WAF_IP};
        proxy_pass              http://variant-server;
        proxy_set_header       Requesting-Node "waf";
    }

}

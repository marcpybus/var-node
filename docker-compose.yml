services:
  data-manager:
    build: data-manager/.
    init: true
    volumes:
      - ./data-manager/apps:/apps
      - ./data:/data
      - ./network-configuration:/network-configuration
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      USE_VEP: ${USE_VEP}
    networks:
      internal:
        ipv4_address: 172.18.0.4
  web-server:
    build: web-server/.
    restart: always
    environment:
      QUERY_TIMEOUT: ${QUERY_TIMEOUT}
      NETWORK_NAME: ${NETWORK_NAME}
      NODE_NAME: ${NODE_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      USE_VEP: ${USE_VEP}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_TOKEN_EXPIRES: ${JWT_ACCESS_TOKEN_EXPIRES}
      RESPONSE_ENCRYPTION: ${RESPONSE_ENCRYPTION}
    volumes:
      - ./web-server/app:/app
      - ./data:/data
      - ./network-configuration:/network-configuration
    networks:
      internal:
        ipv4_address: 172.18.0.2
  variant-server:
    build: variant-server/.
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      NODE_NAME: ${NODE_NAME}
      CONTACT_EMAIL: ${CONTACT_EMAIL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      RESPONSE_ENCRYPTION: ${RESPONSE_ENCRYPTION}
    volumes:
      - ./variant-server/app:/app
    networks:
      internal:
        ipv4_address: 172.18.0.3
  postgres:
    build: postgres/.
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
      - ./postgres/schema-postgres.sql:/docker-entrypoint-initdb.d/schema-postgres.sql
    networks:
      internal:
        ipv4_address: 172.18.0.5
  nginx:
    build: nginx/.
    #restart: always
    environment:
      SERVER_CERT_FILENAME: ${SERVER_CERT_FILENAME}
      SERVER_KEY_FILENAME: ${SERVER_KEY_FILENAME}
    volumes:
      - ./nginx/server-certificates:/server-certificates
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template
      - ./network-configuration:/network-configuration
      - ./data:/data
    ports: 
      - 80:80
      - 443:443
      - 5000:5000
    networks:
      internal:
        ipv4_address: 172.18.0.6
networks:
  internal:
    ipam:
      config:
        - subnet: 172.18.0.0/16